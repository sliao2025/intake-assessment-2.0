generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/* --- Auth.js (NextAuth) tables --- */
model User {
  id            String   @id @default(cuid())
  email         String?  @unique
  name          String?
  image         String?
  emailVerified DateTime?

  // For email+password users (null for Google-only)
  passwordHash  String?

  accounts      Account[]
  sessions      Session[]
  profile       Profile?
  guest         Boolean? @default(false)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text   // <- widen
  access_token      String? @db.Text   // <- widen
  expires_at        Int?
  token_type        String?
  scope             String? @db.Text   // <- often long, widen too
  id_token          String? @db.Text   // <- widen
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/* --- Your Profile persistence (JSON blob) --- */
model Profile {
  userId    String   @id
  json      Json
  version   Int      @default(1)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}